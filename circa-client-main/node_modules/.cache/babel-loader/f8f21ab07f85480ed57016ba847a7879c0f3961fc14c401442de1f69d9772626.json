{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tapas\\\\OneDrive\\\\Desktop\\\\circa\\\\circa-client-main\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if the user is already logged in (e.g., via session or token)\n    // You might need to implement your own logic here\n    // For demonstration purpose, I'll just set it to true\n    setIsLoggedIn(true);\n\n    // Fetch user data when component mounts\n    fetchUserData();\n  }, []);\n  const fetchUserData = async () => {\n    try {\n      // Make a GET request to fetch user data\n      const response = await axios.get('YOUR_API_USER_DATA_ENDPOINT');\n      const userData = response.data;\n      setUsername(userData.username);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  const handleLogout = () => {\n    // Implement your logout logic here\n    // For demonstration purpose, I'll just set isLoggedIn to false\n    setIsLoggedIn(false);\n    setUsername('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Your App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {/* Implement your login logic here */},\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"6M/nd0O2kTDnMkNWg/oABHvQ/K8=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Header","_s","username","setUsername","isLoggedIn","setIsLoggedIn","fetchUserData","response","get","userData","data","error","console","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tapas/OneDrive/Desktop/circa/circa-client-main/src/components/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Header() {\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if the user is already logged in (e.g., via session or token)\n    // You might need to implement your own logic here\n    // For demonstration purpose, I'll just set it to true\n    setIsLoggedIn(true);\n    \n    // Fetch user data when component mounts\n    fetchUserData();\n  }, []);\n\n  const fetchUserData = async () => {\n    try {\n      // Make a GET request to fetch user data\n      const response = await axios.get('YOUR_API_USER_DATA_ENDPOINT');\n      const userData = response.data;\n      setUsername(userData.username);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    // Implement your logout logic here\n    // For demonstration purpose, I'll just set isLoggedIn to false\n    setIsLoggedIn(false);\n    setUsername('');\n  };\n\n  return (\n    <header>\n      <div>\n        <h1>Welcome to Your App</h1>\n        {isLoggedIn ? (\n          <div>\n            <p>Welcome, {username}</p>\n            <button onClick={handleLogout}>Logout</button>\n          </div>\n        ) : (\n          <button onClick={() => { /* Implement your login logic here */ }}>Login</button>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAS,aAAa,CAAC,IAAI,CAAC;;IAEnB;IACAC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC;MAC/D,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI;MAC9BP,WAAW,CAACM,QAAQ,CAACP,QAAQ,CAAC;IAChC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAR,aAAa,CAAC,KAAK,CAAC;IACpBF,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEJ,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3Bd,UAAU,gBACTL,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,GAAG,WAAS,EAACZ,QAAQ;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnB,OAAA;UAAQoB,OAAO,EAAEN,YAAa;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,gBAENnB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAM,CAAE,sCAAwC;QAAAL,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAChF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACjB,EAAA,CA/CQD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}